---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["workload.linkerd.io"]
  resources: ["externalworkloads"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "update", "patch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRQlJ1RzhhZDVwTnBodThldmNTWnhXekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOREE0TURrd01UTTNNalJhRncweU5UQTRNRGt3TVRNM01qUmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBcGt1SXlIM2IxQndHU1BlWG5nbCthWUEwV2JBRllPUnBDbDNkNnFCVENPL1VWdEZBMW41SQpDTC9BOWUyMFF6d1JCeXI4bHdkL0g5bUs4RllId1NWVGlmS2tEaDF6Slk1Mzc2SUxlSTFoczZQMzBCZnJoRWhyCjc1TDJwK2w4Zm9pK3crcDRLbzZNTzlLMkpNcGx2S29UazgyRCs0bXVETmxVdEovZjFwSnFUZG5vaWFCZW5ya0gKdndnb2FWS3pMOFUyaHdZVU1uVkV0am9Bci9LSnRGT3VabzJkK0xnS1NKL2o1OVVrTHF4eVJ6U0MycWk3NGhDRwpXeG4ybVIyd0dPTFVyc3JEdFBvcTZIVUtjKzBpbXJBUFF5YkN0NWRqcnBybFV6M0tIUXkvMG9NcTdnMlVEUGlOCnZZNFVmQVpzZGNEeUtsQ1RObko3b2R1Z0g5VEdqRWN6N1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJYUG4rUTgwUmZ0MW9hWllhNjQ3ZE1FbjRVRTFNOEJrRVBPa2NxN0duMU0KRVl6L3VxekswYlQrUXRVNWZiY28yMnA4RjA5TElkOFRyZUpxd2VFWjM2NzBROWx3VytrZ0x5UDNCMi9rK3ZFZAprS0N0MzZzYW1PTFZWcjJUMTRSNlIyaEN1anVNWUxVV3ZHK0hJZGFremt6RlN5NFNRSzIrUkZtMFNJSDhFTU55CmwwQXUyam0vY09TWXExWitPWmJEaU9LaXAzczZHc2pTTGFrcmt2dElENldZNjFQdUFYVXVPQ0lucVZZY0FucVIKdzBPRDZYNVZjb1BTTGh6Zk9lRGtqYzB3YlcvN0hZTnZNZW16THZ6OFhXYmdVV2V0eFZBRmFpUHN0Sks4UFdZQQprckFWUjhBK095bTNabG4wblJ1RkJEUlVTQ1JPVFdPZU1ROVVKOEhJREdnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGt1SXlIM2IxQndHU1BlWG5nbCthWUEwV2JBRllPUnBDbDNkNnFCVENPL1VWdEZBCjFuNUlDTC9BOWUyMFF6d1JCeXI4bHdkL0g5bUs4RllId1NWVGlmS2tEaDF6Slk1Mzc2SUxlSTFoczZQMzBCZnIKaEVocjc1TDJwK2w4Zm9pK3crcDRLbzZNTzlLMkpNcGx2S29UazgyRCs0bXVETmxVdEovZjFwSnFUZG5vaWFCZQpucmtIdndnb2FWS3pMOFUyaHdZVU1uVkV0am9Bci9LSnRGT3VabzJkK0xnS1NKL2o1OVVrTHF4eVJ6U0MycWk3CjRoQ0dXeG4ybVIyd0dPTFVyc3JEdFBvcTZIVUtjKzBpbXJBUFF5YkN0NWRqcnBybFV6M0tIUXkvMG9NcTdnMlUKRFBpTnZZNFVmQVpzZGNEeUtsQ1RObko3b2R1Z0g5VEdqRWN6N1FJREFRQUJBb0lCQURHV0dHVmdVaXAvYU1oZApPOUtlRmhtelp1alBlZXNZY05Ic2gzMnM3TldmWGZ1OVRjNG52YWNPTnFXZWliLzZxMEV0NmovR3RudHl6T0U1ClpmcUwvTXNIbFMrNFRGdUlqZTdnclBiM2dZaWxmZ0dKQUd0amhQdmRJTHVVL2RCbFNpejFQM3ZCSWNPODR4ODUKVXZqYzVoV09sS3B1dFgyVFdKUzdqMjFXSDJpeTlIbTFxQ0tsYXVyanJ1V3BRR3FoSmRJWXFDWnhpdVlhd2JUawp2cDFHRFUzM0QzVjhXWlpYTEhvVEpzN1JHWklCcm1UTDlEeVBEQVVZQXV5YWJWdDFINEJrQ0ZGR21pVXBtWGdsCmhkcEhEcGJmWWNTT2lUUTR1eTRsOVpuQkZ5aGdzSnlMY25VNXFwSzJjV21LazRsZVBML1BQeHdWWjlWcXN5NUkKR2xRcjhXa0NnWUVBMFlaTXdmc21waDJVMExydzRVTEdYYmZWZkZaQVVFUVdBd3lWWDlLWEZMZDl2dHh3SmY4UgpoZkkyeDNnVUtJVURmR3pmU1VROHdpRlZiZ3hqL1UwNWFXbmtZazNOdHlkaS9ReVVBcklQMjFlY25Kbklvczc5CkNlZjltQUlyYmxXWDU2c0FxS051a2VQR0JaR3lRbUhySXRWY1hWVXRKZy9od0YzRlV6ayttbThDZ1lFQXl5NTUKNnhQbG45b0NLVkRZb3NzbW5OSS91OHJKczJWY0NQWUxqcDdXNWNTeXltRU82ejlhdDFaaFIwZzNMNWl6VnF4UwpXdk9Dc2psejhTaCtKWGx3b1kvV2hTelFjZ2N2WEtMQnR3aGsrc0N0UmxFbjFpTlJkejZ5SkltRGUvY1F0enVwClMwdWQ4MmpMT2hFaGp0NlpqR1BxQ0dmVHdpaUtWVG5VY0t5dnRXTUNnWUVBeHNLYUtpSndSWUVtWE9RYUFmYncKYXBNcnlDbWlGUUtoeHY2MjdSRy9GSDRFb1h4SVB5TTZvbEJsdXMra2Y5Tyt2TmdpOFVQMFIweUwyRHVVMXdQZApCS3paWkkvZUtITUtxbmEyS2VCMHZtVGNRb3A0RkVvN0xKeVFxeFRUMG5VTUIwN203eE1xbnVidVFQWTNubFY1ClU3QUhVTnF1Vzc4Ukx3VkZYVytlZmEwQ2dZQlNKY05UUVNNbzR4cldtNEpMSjNuQUU5MkN6cldJRzZYL1ZZTk0Kc1huUFFoekxhRHlBN29kOThxVzREVUdLcytGbVhKdWJmRExPWGg0N1ZaVFREK3R5MXRYejJDK2F1cjd5WkRlUQpDZ3ZSdWc4VWpBRmdPYjFaU2ZiNmdNS3hYeTNaOTN3MkhpZUpYMGd6ZlBPbGNPaUI4MitPNEhPa1g0RzJmWUFmCjRpSFVZd0tCZ0Jrd0RjMWtYczF1NG0vOGRFbWlFNmtRUW1qS0VDbUZwS3NhWWZoSXVKcUJwbmNRMmZPT0VIdEYKMm15elRmSUxNemx3c0Z5OEg0UVlvQUJIRStkTHJZT3Bsb1hETzEzQWRRN1c0NVBEeEFVZGRySUEyRERDZlNXYwpuZm5MUEptQUJDU3ZnVlZaZUdyaTQ2bzB4SHViYWxNMzh5QitrS2ZTbGVxWmJMOHdSd05ICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRQlJ1RzhhZDVwTnBodThldmNTWnhXekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOREE0TURrd01UTTNNalJhRncweU5UQTRNRGt3TVRNM01qUmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBcGt1SXlIM2IxQndHU1BlWG5nbCthWUEwV2JBRllPUnBDbDNkNnFCVENPL1VWdEZBMW41SQpDTC9BOWUyMFF6d1JCeXI4bHdkL0g5bUs4RllId1NWVGlmS2tEaDF6Slk1Mzc2SUxlSTFoczZQMzBCZnJoRWhyCjc1TDJwK2w4Zm9pK3crcDRLbzZNTzlLMkpNcGx2S29UazgyRCs0bXVETmxVdEovZjFwSnFUZG5vaWFCZW5ya0gKdndnb2FWS3pMOFUyaHdZVU1uVkV0am9Bci9LSnRGT3VabzJkK0xnS1NKL2o1OVVrTHF4eVJ6U0MycWk3NGhDRwpXeG4ybVIyd0dPTFVyc3JEdFBvcTZIVUtjKzBpbXJBUFF5YkN0NWRqcnBybFV6M0tIUXkvMG9NcTdnMlVEUGlOCnZZNFVmQVpzZGNEeUtsQ1RObko3b2R1Z0g5VEdqRWN6N1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJYUG4rUTgwUmZ0MW9hWllhNjQ3ZE1FbjRVRTFNOEJrRVBPa2NxN0duMU0KRVl6L3VxekswYlQrUXRVNWZiY28yMnA4RjA5TElkOFRyZUpxd2VFWjM2NzBROWx3VytrZ0x5UDNCMi9rK3ZFZAprS0N0MzZzYW1PTFZWcjJUMTRSNlIyaEN1anVNWUxVV3ZHK0hJZGFremt6RlN5NFNRSzIrUkZtMFNJSDhFTU55CmwwQXUyam0vY09TWXExWitPWmJEaU9LaXAzczZHc2pTTGFrcmt2dElENldZNjFQdUFYVXVPQ0lucVZZY0FucVIKdzBPRDZYNVZjb1BTTGh6Zk9lRGtqYzB3YlcvN0hZTnZNZW16THZ6OFhXYmdVV2V0eFZBRmFpUHN0Sks4UFdZQQprckFWUjhBK095bTNabG4wblJ1RkJEUlVTQ1JPVFdPZU1ROVVKOEhJREdnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU1SU2wxVVZPK2ZBR2t3R2wwNTBtemN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1EZ3dPVEF4TXpjeU5Gb1hEVEkxTURnd09UQXhNemN5TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeEM3V1RGMy9WNWJHVkwxYS9sNm56MGI2U3FoTS81NHJJVk1qQXhjWApMbkhZYk01RzZPNEVEMGtJTnYyVzNlcWloVXF3bnVCNU9Vam11cks2U25hMVJGUktrR3hFZ2Uvc05sVVluL2JlClpZZzQwWnBNaXlZaVlqVExOS2h2VE4vNjlZTERwMVNCN1YwMVBBa2dtZXI4NHFOVlB3VGRuelc0akdScUhNa2cKSGlFMlFURGlLYXZNdFJKaW9sT3k5L2hKRFBOTktINDhlVlAyc24yNWRpRWVXREMvQ1ZyRkVlRHV5TlBJZWpOMAppYjZFOG1vcnQ2bStkWmlaS01GR052SUV3cFdmYkFZWkZuRWpBaWlMNzBDSHJNTEZnNStOZHdCMWxoQndDRlNzCnViNTNzMHVxNjJ6UlkrbUN6WW5yMUFrQzRpLzZyc3JmeEJSMnZiWXAvRHVqSXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1NZSEhralB6VDJIU0tKdHZJVk5zYzIzc0UKK3BQZ2hWNkdQM0UraXNGcUVJdlA0bUcrcFdkL3J6c0laeFlvRVpzK1NOb1VlVTBPWi9rYWJVUDhIdDJHbXhVZwoxWXk5cElsUkpIVTE2b3ZMdGptVlpkYlp1cVQ2ZFo5bmJ5MlY0b0RrM0Faa2JSN2hpU0dSTmxJaXkyTGptYi80ClpyOGNxd2RIT1BOcDB1ZE94ZlFadEVUSUtndjBwbWh6TzRWQTQ4VDNxNVRZYWVMNStPNkpBWHJyR0M2QllvbVgKeTVrZkxtR2p1V0N3RjBDVEx6dTRNamNDcVJrazdLenhwd0lwKzJneE02c0tTZmdjWEtTN2oyMkcrajZROFdJcQozbzY1ZURKcSttK1JPdUhKUG9Ha0ZSSUJwS1R3YmhLbzVPUTI3S3pJakRPWVBCeXUwdWE4ZUFGT1pLby8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEM3V1RGMy9WNWJHVkwxYS9sNm56MGI2U3FoTS81NHJJVk1qQXhjWExuSFliTTVHCjZPNEVEMGtJTnYyVzNlcWloVXF3bnVCNU9Vam11cks2U25hMVJGUktrR3hFZ2Uvc05sVVluL2JlWllnNDBacE0KaXlZaVlqVExOS2h2VE4vNjlZTERwMVNCN1YwMVBBa2dtZXI4NHFOVlB3VGRuelc0akdScUhNa2dIaUUyUVREaQpLYXZNdFJKaW9sT3k5L2hKRFBOTktINDhlVlAyc24yNWRpRWVXREMvQ1ZyRkVlRHV5TlBJZWpOMGliNkU4bW9yCnQ2bStkWmlaS01GR052SUV3cFdmYkFZWkZuRWpBaWlMNzBDSHJNTEZnNStOZHdCMWxoQndDRlNzdWI1M3MwdXEKNjJ6UlkrbUN6WW5yMUFrQzRpLzZyc3JmeEJSMnZiWXAvRHVqSXdJREFRQUJBb0lCQVFDUHFaelVuNkQxQ3p5QgpvWWlZN2NnRlNmelAzeDlEc1JmMGQyVVVSang3am5MbWVzZ0Ntd251QjVVMGI4K2pBc2V3eEZsQ2Z5OUdlOVE2CnM5Y240SFl0YTJ5UEJqbkV6V1UxQkd2YitIUXo5ZVZsMkpCazliQUlLcEVFSnJRYW40cXZidXJJQm1KKzU5cXIKOUNNams2bE1iajltdnJGc2ZYSi9uS2o0RzNDaG5uZ1QrT0pQUE5iUVVDZklaYUIwTnY1c2lGdXFlOG1aQzRBUQo0TnZXaHpuNVdFcnh4VXFkbmkzU01LTSs0NXVnTTNtSDlhc3FGZHYzdXFJZWJHaE9rZTY5NlJ1cFM2NzJYbUdvCm04UWRPWEpmWkpOYWQ2TjErc3ZESHZTbFp1RmFGU2JmZnBJK3NDZVhnQmZodFMvQUtlVlczckxLMnp2MHZ4SFUKaWdQc01Ga0JBb0dCQU9tSmVncm1DbGtGMzRNQnZiYVFSaE5ZcjVmaDJJWmtyV0hXUFBienQwWmkwN2w1NGY0TApnWU9aOEVZWFArT28wWG9Nc25nVnlWUUFZWENrcXpTalNhSFJieWJxNjZVVFduRzJjT2YzTWttTDF3a3lNMDlVClhJL2F6dmIrUlE1UTVYV0hTanZQYWJJR3BXZzY5UXVBTzdod3FoNVhwYTA5eXVVTDdNRTZ1YjN4QW9HQkFOY04Ka1ppSWQ5QUxyYVUvSWY1OGV6QnZ2S1VBaVlaWWVZNENXeEI2U2dHYTRnTlVsS21tV2p5ZnhPSWJPUkZ2TklNTQpZbUZRNEZkRWZVM1prZFJTODg0dW1mQUZUMmp5MkJjSkV4dWU5ejVoVWprdng2azNib0RSc0FxMFQ0SVJyRkx0CnR5d2dUemdUQSt6OHhRRW9XZW9LRDJPeGZ3Z3hPTzhXajh3UlBlNVRBb0dBTjk4RENwNTBkVTNaWmw5QlF1OEwKUk0rZjJzZFdaUGlySGxBQjc5Ym96dmNQemp6aG0wU25iSk9ranpBNndiMSt1Q05YZ3pFN0pGU2Urekw2SHJLKwpCKyt5RnU1M0I5dzBkQ1lBcHc1VndwQ3BGbk1qSVdSK2JKQWRtYXZGVzZKdzh3ZzE4MDh3NnoxNXp4RGoxU2VOCm9oZWFLMzR1amQ3TnJyU0dwTWZtN2hFQ2dZQkozVUU2OFBTbUlyeTcyMWxqdllIYWV5YUNUaEx1Y0FrZ083TG4Kai9sSFg5bHRaMm5BYzREZS9jbDBHQUdiK1dSQjlzajd2L211UDdvQ09VNmJiUHFNd1BqaXRoQTJiZUxHMXJrWApiWnhpY3E3NU1XNFVzeE5qYjZKVnF1VDhPZkhFY2gzT0xETEpnYzZCWWJpUTB6ays1OEd0YmxQQmpwYU5tR1EvCnBWUnVQUUtCZ0gvaTROczI3UWhJMkpCZDlYWk5aMmRtM2VTazZCNzRtNzkrTFd5SGg3S2tUM1c1aUVOUHFjdWkKT0pxQjZlU2ZnVEw4WjlMcmNjWU9UcXMya1pmRmtpSWZnVCtMcXd1VlhpbGJPVXZKVEJNUlROMGZkelArNVRGYwpzV1BpYjl5RVJyTkJpYzF1MlVPYURFT0MxTVpwbGRQM2VzbUM2Y001SzJtMHRlTnQxdVVrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU1SU2wxVVZPK2ZBR2t3R2wwNTBtemN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1EZ3dPVEF4TXpjeU5Gb1hEVEkxTURnd09UQXhNemN5TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeEM3V1RGMy9WNWJHVkwxYS9sNm56MGI2U3FoTS81NHJJVk1qQXhjWApMbkhZYk01RzZPNEVEMGtJTnYyVzNlcWloVXF3bnVCNU9Vam11cks2U25hMVJGUktrR3hFZ2Uvc05sVVluL2JlClpZZzQwWnBNaXlZaVlqVExOS2h2VE4vNjlZTERwMVNCN1YwMVBBa2dtZXI4NHFOVlB3VGRuelc0akdScUhNa2cKSGlFMlFURGlLYXZNdFJKaW9sT3k5L2hKRFBOTktINDhlVlAyc24yNWRpRWVXREMvQ1ZyRkVlRHV5TlBJZWpOMAppYjZFOG1vcnQ2bStkWmlaS01GR052SUV3cFdmYkFZWkZuRWpBaWlMNzBDSHJNTEZnNStOZHdCMWxoQndDRlNzCnViNTNzMHVxNjJ6UlkrbUN6WW5yMUFrQzRpLzZyc3JmeEJSMnZiWXAvRHVqSXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1NZSEhralB6VDJIU0tKdHZJVk5zYzIzc0UKK3BQZ2hWNkdQM0UraXNGcUVJdlA0bUcrcFdkL3J6c0laeFlvRVpzK1NOb1VlVTBPWi9rYWJVUDhIdDJHbXhVZwoxWXk5cElsUkpIVTE2b3ZMdGptVlpkYlp1cVQ2ZFo5bmJ5MlY0b0RrM0Faa2JSN2hpU0dSTmxJaXkyTGptYi80ClpyOGNxd2RIT1BOcDB1ZE94ZlFadEVUSUtndjBwbWh6TzRWQTQ4VDNxNVRZYWVMNStPNkpBWHJyR0M2QllvbVgKeTVrZkxtR2p1V0N3RjBDVEx6dTRNamNDcVJrazdLenhwd0lwKzJneE02c0tTZmdjWEtTN2oyMkcrajZROFdJcQozbzY1ZURKcSttK1JPdUhKUG9Ha0ZSSUJwS1R3YmhLbzVPUTI3S3pJakRPWVBCeXUwdWE4ZUFGT1pLby8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["gateway.networking.k8s.io"]
    apiVersions: ["*"]
    resources:
    - httproutes
    - grpcroutes
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
      - grpcroutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
      - grpcroutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZkhhUldiZGFMSVBPb3dubDMzcllrakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkwTURnd09UQXhNemN5TkZvWERUSTFNRGd3T1RBeE16Y3lORm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOV3FMNnBleWQrT24wb0RaVmFSRENycDY0U0tyVlNCOFFSbFVOSkFhVjZ0c2pGZwpMdDJvNVRTVVhoWEllZUtyaVhvYmg4bXNlUE9rQkRidXJuMm5pV3ZPSXRyS2tsWW0rbmZhZHh2UE5sbElpTDN4Cmp6LzBUN1VuZXI1bmwxeUgvNEw5Nk96WTJoS0R2VzBkYURqK0ZtVDdsR1p3Zlo5dHRrc25sR0RRTlpPMEZjK2wKZGZ1WUlZVWhKZ0wzTS9nbjhIWjZXbWttSE82cWFWUERraGdUeVFmY0tYN0ppZXJ1NTVKMHRFN0RLY050UlV6TAp1eTBORlM0MWFNZDhkOWNvZTFFR1NGMHkzemdRTXJjQ0FpZFhpZnhSOWtMeDFaZDhUcDZOZ0J4Z2x0YmpzKysyClhPRmkzTk5rNFFOUHFDWTRkMmxWeWJwN0FtTlhiYkNTcXVoNzVrTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlNDYXRwNVN5RTJVOUFWcHZZWDlYcXc4NWJjVWwrWXhMU2MKNGlvcHczbW13ZXpONksxN1F6K2lGMWtMYzFLeFRVdnNMT0hZZEhGcit4dkxqYXRNVFNMTG5rT1diRXF5MjJaMgo0b25kTUtreGZuak9UaDZVZmFTUjRjNjZtSGpFMHBRM2JGK2ROYThRUTNmRFY1dk15dTRhdk1USTloQk9rbVRyCmxQcGJrSXJta2JkdTFBeDJtbHBaa1dNdWpoQ0hDU0ZQNUs3RTBENWRDU3BBSGNBUHJVZEtMTGVtVGQvdXNzcmMKcDNWMEIyNnIyV2p4ZnE4ZHZ5c2k3cEovV1Q5Z3BJbWxUckZDN1lkYTBVMGtUZEJXSTR0YlpDb2tOY1VyVFJ4agoxK0VzQmNhazFDTFRkZXpYZTM4TWVWT0NmdHBoaFpCWWFvVUZjVWZEOWluVlFQNlZRZFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWFvdnFsN0ozNDZmU2dObFZwRU1LdW5yaElxdFZJSHhCR1ZRMGtCcFhxMnlNV0F1CjNhamxOSlJlRmNoNTRxdUplaHVIeWF4NDg2UUVOdTZ1ZmFlSmE4NGkyc3FTVmliNmQ5cDNHODgyV1VpSXZmR1AKUC9SUHRTZDZ2bWVYWElmL2d2M283TmphRW9POWJSMW9PUDRXWlB1VVpuQjluMjIyU3llVVlOQTFrN1FWejZWMQorNWdoaFNFbUF2Y3orQ2Z3ZG5wYWFTWWM3cXBwVThPU0dCUEpCOXdwZnNtSjZ1N25rblMwVHNNcHcyMUZUTXU3CkxRMFZMalZveDN4MzF5aDdVUVpJWFRMZk9CQXl0d0lDSjFlSi9GSDJRdkhWbDN4T25vMkFIR0NXMXVPejc3WmMKNFdMYzAyVGhBMCtvSmpoM2FWWEp1bnNDWTFkdHNKS3E2SHZtUXdJREFRQUJBb0lCQVFDdnhKNExvSWlmZ1B0bQo3cDQ1OVg2MSt0TUZxUE5uOXJGbjlWVGtjWnA5Q1pUeWEzYUNZSU9WbW93L2pUay9qKys3Wk5SeXdwQ0psWjdsCjliblRvclE0M0UzdUFRRWJJRnVocHpXZXlmcWl2am5IVCtXUkxoRTRMRzhjSGFuMXMrY3RRbVdRR2VCanBMNTYKK2RzWUwyWUswcTlGQ2pzOW9RcDZqdWZRTU5neVZVeE1DRzdpUEt4UFNOcTJrYXQveFJWcW95ZDFYUXlSQWU2bgpuWGxqQ1lqM0t1UmVRTXcwNE9QQXZINnNQNk1PNXZqNU14OFVHRWF5enIveFVEaXJXQWhEcDZUV2VCcXdmbWVwCkFQZGZUL2I5a2hIUjJuUEo0RVlHVmMrYVJ5bjZtbXNZUkUrNDYyVlpjUGRSZ0RKR2l5UHFTQUpxcXlveTBVVncKc2hmdGM0dnhBb0dCQVB3elVocEdBVlpOTlQ0K3JINFBsb2Zybmo4QXlGL0pYVHhjTHlUU1VUSkJGSVIzVjFXQgpxdHNkeVFQT1BmdW0xVm9vdklielphRm5kZURSVmJZZXdNNlVlT2k5eUV0ODVxbGwzWG93MHl3NURzam44c0VHCjNlSWhZdm1IN0tKbmlhLzhVTjYrRWtGdURVdFpkMlpjdnRVZWNCRXNYeENNQWxzZmV1YnBxVEFaQW9HQkFOamkKUGdGUG44dFBFYktpait3OHlzMGhBRTd2VEh6LzJuRWZkelhCc3IrU1FqSzB4V1lyenBOQlBWcVpvTlZTMzBTMwo2MGt0eUEwS0xzU2hwTHlDTjc4UkdqOFhTUFAxaXhPOWVESXE3dFZQZVAwa0FqMWR4SjJWbTF0MWx1cC9hS2JDCnBjV1JJQ2MxVUw1TEVINUV2SlJQc1k1NHZrNmJGUjYybTNwdmZHUzdBb0dCQU54ejQvWFJjY1BGazZBSVd2R0sKb0xQSk16ZXhjSFhDWi95bVBCTjh3THNrQmxKUW00ZkQ0OXpMYVhZcEp5Yzl5MHVYUmt6VW4rYjVzQ0hIK3B0Swp3SkVUV2FsZ2s1L2cyeVFDUmhwVWFaTkRnUGYvUU1TWVF3WXkxdmgyWjFRREcyazVMbHUyVy9EVHlVMHZORjdHCi9Zei9vVWh4dDl1WDkwczk5a200d0VxcEFvR0FFU0srOTJlTkhva2V3dGhwT3FjSzl1NFdraVlDQ3haRDhoQWsKWVJEdXlJZ0x4dW5WZHQ4Yk1UTkVYN1lucVBNbFJNNnJQbHJwcFc0YWg5cWxvMmMrZEZBcm5MU0FSUll2YU4zZApjMGxGR1lGdjg4QTJsUmFsaERYZjBuZ1Y5bTBlblo1ZmJwNnF4YTVHdE9KRmFWU1ErYjdhTG9HSHQ3bzFEdm9xCmlwL29XaVVDZ1lCY3F6SUM1aGgrbERYb0FqaUNUdHJHMk9xdC9MbFZxb3owQ0NHcEl2dDllMno4ZEZ4UnljbkoKZXR6Wm45T005bXVhZnoybUxFQXE5YmpscXJSOXZxcUlheGswWEZiakpoTUVRUmVZS0o5RUtHbUFPcXFBNWFhMgorRkZiWGdldlhCYnQ2Sk1GZ240NTBDYi8vcXRjN2tSeFA1akt1OXdPanBxcnFjWEs5TWxSVkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZkhhUldiZGFMSVBPb3dubDMzcllrakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkwTURnd09UQXhNemN5TkZvWERUSTFNRGd3T1RBeE16Y3lORm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOV3FMNnBleWQrT24wb0RaVmFSRENycDY0U0tyVlNCOFFSbFVOSkFhVjZ0c2pGZwpMdDJvNVRTVVhoWEllZUtyaVhvYmg4bXNlUE9rQkRidXJuMm5pV3ZPSXRyS2tsWW0rbmZhZHh2UE5sbElpTDN4Cmp6LzBUN1VuZXI1bmwxeUgvNEw5Nk96WTJoS0R2VzBkYURqK0ZtVDdsR1p3Zlo5dHRrc25sR0RRTlpPMEZjK2wKZGZ1WUlZVWhKZ0wzTS9nbjhIWjZXbWttSE82cWFWUERraGdUeVFmY0tYN0ppZXJ1NTVKMHRFN0RLY050UlV6TAp1eTBORlM0MWFNZDhkOWNvZTFFR1NGMHkzemdRTXJjQ0FpZFhpZnhSOWtMeDFaZDhUcDZOZ0J4Z2x0YmpzKysyClhPRmkzTk5rNFFOUHFDWTRkMmxWeWJwN0FtTlhiYkNTcXVoNzVrTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlNDYXRwNVN5RTJVOUFWcHZZWDlYcXc4NWJjVWwrWXhMU2MKNGlvcHczbW13ZXpONksxN1F6K2lGMWtMYzFLeFRVdnNMT0hZZEhGcit4dkxqYXRNVFNMTG5rT1diRXF5MjJaMgo0b25kTUtreGZuak9UaDZVZmFTUjRjNjZtSGpFMHBRM2JGK2ROYThRUTNmRFY1dk15dTRhdk1USTloQk9rbVRyCmxQcGJrSXJta2JkdTFBeDJtbHBaa1dNdWpoQ0hDU0ZQNUs3RTBENWRDU3BBSGNBUHJVZEtMTGVtVGQvdXNzcmMKcDNWMEIyNnIyV2p4ZnE4ZHZ5c2k3cEovV1Q5Z3BJbWxUckZDN1lkYTBVMGtUZEJXSTR0YlpDb2tOY1VyVFJ4agoxK0VzQmNhazFDTFRkZXpYZTM4TWVWT0NmdHBoaFpCWWFvVUZjVWZEOWluVlFQNlZRZFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli edge-24.8.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controller:
      podDisruptionBudget:
        maxUnavailable: 1
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-24.8.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    disableIPv6: true
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeat: null
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      additionalEnv: null
      experimentalEnv: null
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNDA4MDgwMDUxNDZaFw0yNTA4MDgwMDUyMDZaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE2YRgYDmZ9GIUHDv1L3CW1Ebn8pXav5KajyxbtYOvjYLlc50ibMZzrFPnbWSW
            HNiYiKMDD7+nRRkcCkDk9FTAaKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSqrkm8p+KDssGI6Sdq8g0Ldwyi1TAKBggqhkjOPQQDAgNJADBGAiEAiTEIJpg9
            F3kfVaCua4B2QrDaSFQnnvoW8Xh12hCVv2YCIQDf1UIY9GrYVbxUzWqmYBTkfMaW
            sVxTXb4hClp50n5vOA==
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNDA4MDgwMDUxNDZaFw0yNTA4MDgwMDUyMDZaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAE2YRgYDmZ9GIUHDv1L3CW1Ebn8pXav5KajyxbtYOvjYLlc50ibMZzrFPnbWSW
      HNiYiKMDD7+nRRkcCkDk9FTAaKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSqrkm8p+KDssGI6Sdq8g0Ldwyi1TAKBggqhkjOPQQDAgNJADBGAiEAiTEIJpg9
      F3kfVaCua4B2QrDaSFQnnvoW8Xh12hCVv2YCIQDf1UIY9GrYVbxUzWqmYBTkfMaW
      sVxTXb4hClp50n5vOA==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: edge-24.8.2
    networkValidator:
      connectAddr: ""
      enableSecurityContext: true
      listenAddr: ""
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      additionalEnv: null
      await: true
      capabilities: null
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      enableShutdownEndpoint: false
      experimentalEnv: null
      gid: -1
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logHTTPHeaders: "off"
      logLevel: warn,linkerd=info,hickory=error
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources: null
      runAsGroup: 65534
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      additionalEnv: null
      caBundle: ""
      crtPEM: ""
      experimentalEnv: null
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    revisionHistoryLimit: 10
    spValidator: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOREE0TURnd01EVXhORFphRncweU5UQTRNRGd3TURVeU1EWmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUUyWVJnWURtWjlHSVVIRHYxTDNDVzFFYm44cFhhdjVLYWp5eGJ0WU92allMbGM1MGliTVp6ckZQbmJXU1cKSE5pWWlLTURENytuUlJrY0NrRGs5RlRBYUtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU3Fya204cCtLRHNzR0k2U2RxOGcwTGR3eWkxVEFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBaVRFSUpwZzkKRjNrZlZhQ3VhNEIyUXJEYVNGUW5udm9XOFhoMTJoQ1Z2MllDSVFEZjFVSVk5R3JZVmJ4VXpXcW1ZQlRrZk1hVwpzVnhUWGI0aENscDUwbjV2T0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdpOGZrNHAyTFppc01sNDFRdDJCQWZpREFQZlJmdlg0VER1MFA5ZUxDMXZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFMllSZ1lEbVo5R0lVSER2MUwzQ1cxRWJuOHBYYXY1S2FqeXhidFlPdmpZTGxjNTBpYk1aegpyRlBuYldTV0hOaVlpS01ERDcrblJSa2NDa0RrOUZUQWFBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNDA4MDgwMDUxNDZaFw0yNTA4MDgwMDUyMDZaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAE2YRgYDmZ9GIUHDv1L3CW1Ebn8pXav5KajyxbtYOvjYLlc50ibMZzrFPnbWSW
    HNiYiKMDD7+nRRkcCkDk9FTAaKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSqrkm8p+KDssGI6Sdq8g0Ldwyi1TAKBggqhkjOPQQDAgNJADBGAiEAiTEIJpg9
    F3kfVaCua4B2QrDaSFQnnvoW8Xh12hCVv2YCIQDf1UIY9GrYVbxUzWqmYBTkfMaW
    sVxTXb4hClp50n5vOA==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.8.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-24.8.2
        linkerd.io/proxy-version: edge-24.8.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 163ab0a5968a71aa2a0d4dda72a36fea77f9806b326e4d4d5460380dae573ee7
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.8.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 2fc542253c39d3007b6229ae7a4cddd6778c4bd762274f7d10adb47b9f1b603f
        linkerd.io/created-by: linkerd/cli edge-24.8.2
        linkerd.io/proxy-version: edge-24.8.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 163ab0a5968a71aa2a0d4dda72a36fea77f9806b326e4d4d5460380dae573ee7
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-ipv6=false
        - -enable-pprof=false
        - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
        image: cr.l5d.io/linkerd/controller:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0,::/0
        image: cr.l5d.io/linkerd/policy-controller:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.8.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
spec:
  concurrencyPolicy: Replace
  schedule: "47 01 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli edge-24.8.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:edge-24.8.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.8.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 961ee999add6043ce733e4da822a0a21cb53a587968b5ce05388074a597da192
        linkerd.io/created-by: linkerd/cli edge-24.8.2
        linkerd.io/proxy-version: edge-24.8.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 163ab0a5968a71aa2a0d4dda72a36fea77f9806b326e4d4d5460380dae573ee7
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-24.8.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.8.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlOREE0TURnd01EVXhORFphRncweU5UQTRNRGd3TURVeU1EWmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFMllSZ1lEbVo5R0lVSER2MUwzQ1cxRWJuOHBYYXY1S2FqeXhidFlPdmpZTGxjNTBpYk1aenJGUG5iV1NXCiAgICAgICAgSE5pWWlLTURENytuUlJrY0NrRGs5RlRBYUtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNxcmttOHArS0Rzc0dJNlNkcThnMExkd3lpMVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWlURUlKcGc5CiAgICAgICAgRjNrZlZhQ3VhNEIyUXJEYVNGUW5udm9XOFhoMTJoQ1Z2MllDSVFEZjFVSVk5R3JZVmJ4VXpXcW1ZQlRrZk1hVwogICAgICAgIHNWeFRYYjRoQ2xwNTBuNXZPQT09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlHaThmazRwMkxaaXNNbDQxUXQyQkFmaURBUGZSZnZYNFREdTBQOWVMQzF2b0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFMllSZ1lEbVo5R0lVSER2MUwzQ1cxRWJuOHBYYXY1S2FqeXhidFlPdmpZTGxjNTBpYk1aegogICAgICAgIHJGUG5iV1NXSE5pWWlLTURENytuUlJrY0NrRGs5RlRBYUE9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlOREE0TURnd01EVXhORFphRncweU5UQTRNRGd3TURVeU1EWmFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFMllSZ1lEbVo5R0lVSER2MUwzQ1cxRWJuOHBYYXY1S2FqeXhidFlPdmpZTGxjNTBpYk1aenJGUG5iV1NXCiAgSE5pWWlLTURENytuUlJrY0NrRGs5RlRBYUtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlNxcmttOHArS0Rzc0dJNlNkcThnMExkd3lpMVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWlURUlKcGc5CiAgRjNrZlZhQ3VhNEIyUXJEYVNGUW5udm9XOFhoMTJoQ1Z2MllDSVFEZjFVSVk5R3JZVmJ4VXpXcW1ZQlRrZk1hVwogIHNWeFRYYjRoQ2xwNTBuNXZPQT09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
